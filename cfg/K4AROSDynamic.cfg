#!/usr/bin/env python
PACKAGE = "azure_kinect_ros_driver"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("min_pointcloud", int_t, 0, "Minimum pointcloud updates before octomap is considered valid", 5, 1, 10)
gen.add("max_depth", int_t, 0, "Maximum depth when traversing the octree to send out markers. 16: full depth / max. resolution", 16, 1, 16)
gen.add("pointcloud_min_x", double_t, 0, "Minimum x coordinate for points to consider for insertion [in octomap frame]", -100, -100, 100)
gen.add("pointcloud_max_x", double_t, 0, "Maximum x coordinate for points to consider for insertion [in octomap frame]" , 100, -100, 100)
gen.add("pointcloud_min_y", double_t, 0, "Minimum y coordinate for points to consider for insertion [in octomap frame]", -100, -100, 100)
gen.add("pointcloud_max_y", double_t, 0, "Maximum y coordinate for points to consider for insertion [in octomap frame]",  100, -100, 100)
gen.add("pointcloud_min_z", double_t, 0, "Minimum z coordinate for points to consider for insertion [in octomap frame]", -100, -100, 100)
gen.add("pointcloud_max_z", double_t, 0, "Maximum z coordinate for points to consider for insertion [in octomap frame]",  100, -100, 100)
gen.add("sensor_model_max_range", double_t, 0, "Sensor maximum range", -1.0, -1.0, 100)
gen.add("sensor_model_min_range", double_t, 0, "Sensor minimum range", -1.0, -1.0, 100)
gen.add("sensor_model_hit", double_t, 0, "Probabilities for hits in the sensor model when dynamically building a map", 0.7, 0.5, 1.0)
gen.add("sensor_model_miss", double_t, 0, "Probabilities for misses in the sensor model when dynamically building a map", 0.4, 0.0, 0.5)
gen.add("sensor_model_min", double_t, 0, "Minimum probability for clamping when dynamically building a map", 0.12, 0.0, 1.0)
gen.add("sensor_model_max", double_t, 0, "Maximum probability for clamping when dynamically building a map", 0.97, 0.0, 1.0)

exit(gen.generate(PACKAGE, "k4a_ros_bridge", "K4AROSDynamic"))
